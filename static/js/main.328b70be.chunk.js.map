{"version":3,"sources":["TeamForm.js","EmployeeForm.js","Hierarchy.js","FilterSearch.js","App.js","locales.js","reportWebVitals.js","index.js"],"names":["TeamForm","props","handleClose","setShow","useState","name","setName","empId","setEmpId","empName","setEmpName","position","setPosition","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","onChange","e","target","value","placeholder","Text","Footer","Button","variant","onClick","found","data","some","val","formValidation","items","Array","from","teamObj","empObj","empArr","id","thumb","push","employees","updateCharacters","alert","EmployeeForm","setEmpShow","empShow","teamData","filter","draggedTeamName","team","forEach","index","Hierarchy","characters","draggedItem","setDraggedItem","droppableId","setDroppableId","setDraggedTeamName","useEffect","handleNameChange","teamIndex","handlePositionChange","handleDelete","length","splice","onDragEnd","result","destination","source","emp","draggableId","i","reorderedItem","console","log","map","style","backgroundColor","provided","droppableProps","ref","innerRef","searchValue","Fragment","background","draggableProps","dragHandleProps","left","paddingBottom","class","fontSize","width","margin","padding","textAlign","type","paddingLeft","toLowerCase","src","height","alt","paddingTop","FilterSearch","setSearchValue","App","abc","localStorage","setItem","JSON","stringify","LOCALEOBJECT","People","getItem","setDataSource","parse","dataSource","textAlignLast","color","Accordion","defaultActiveKey","Item","eventKey","paddingRight","headName","headId","teams","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4iFAqGeA,MAhGf,SAAkBC,GAEd,IAAMC,EAAc,kBAAMD,EAAME,SAAQ,IACxC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA+CA,OACI,mCAEI,eAACC,EAAA,EAAD,CAAOC,KAAMb,EAAMa,KAAMC,OAAQb,EAAjC,UACI,cAACW,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,6BAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,gBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAxDb,SAACC,GACtBrB,EAAQqB,EAAEC,OAAOC,QAuD6CA,MAAOxB,EAAMyB,YAAY,eACnE,cAACV,EAAA,EAAKW,KAAN,CAAWT,UAAU,aAArB,yDAIJ,eAACF,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SA3DZ,SAACC,GACvBnB,EAASmB,EAAEC,OAAOC,QA0D6CA,MAAOtB,EAAOuB,YAAY,yBAEzE,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,mBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SA3DV,SAACC,GACzBjB,EAAWiB,EAAEC,OAAOC,QA0D6CA,MAAOpB,EAASqB,YAAY,2BAE7E,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,uBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SA3DN,SAACC,GAC7Bf,EAAYe,EAAEC,OAAOC,QA0DgDC,YAAY,iBAAiBD,MAAOlB,YAIjG,eAACE,EAAA,EAAMmB,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjC,EAArC,mBAGA,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA/DrB,WACjB,IAAMC,EAAQnC,EAAMoC,KAAKC,MAAK,SAACC,GAAD,OAASA,EAAIlC,OAASA,KAC9CmC,KAAmBnC,GAASE,GAAUE,GAAYE,GACxD,IAAKyB,GAASI,EAAgB,CAC1B,IAAMC,EAAQC,MAAMC,KAAK1C,EAAMoC,MACzBO,EAAU,GACVC,EAAS,GACTC,EAAS,GACfF,EAAQvC,KAAOA,EACfwC,EAAOE,GAAKxC,EACZsC,EAAOlC,SAAWA,EAClBkC,EAAOxC,KAAOI,EACdoC,EAAOG,MAAQ,qBACfF,EAAOG,KAAKJ,GACZD,EAAQM,UAAYJ,EACpBL,EAAMQ,KAAKL,GACX3C,EAAMkD,iBAAiBV,GACvBnC,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXE,EAAY,IACZV,SACOkC,EACPgB,MAAM,6BACEZ,GACRY,MAAM,yCAsCE,mCCJLC,MAnFf,SAAsBpD,GAElB,IAAMC,EAAc,kBAAMD,EAAMqD,YAAW,IAC3C,EAA0BlD,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA2CA,OACI,mCACI,eAACC,EAAA,EAAD,CAAOC,KAAMb,EAAMsD,QAASxC,OAAQb,EAApC,UACI,cAACW,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,oCAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,iBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAnDZ,SAACC,GACvBnB,EAASmB,EAAEC,OAAOC,QAkD6CA,MAAOtB,EAAOuB,YAAY,yBAEzE,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,mBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAnDV,SAACC,GACzBjB,EAAWiB,EAAEC,OAAOC,QAkD6CA,MAAOpB,EAASqB,YAAY,2BAE7E,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,uBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAnDN,SAACC,GAC7Bf,EAAYe,EAAEC,OAAOC,QAkDgDC,YAAY,iBAAiBD,MAAOlB,YAIjG,eAACE,EAAA,EAAMmB,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjC,EAArC,mBAGA,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAvDrB,WACjB,IAAMqB,EAAWvD,EAAMoC,KAAKoB,QAAO,SAAClB,GAAD,OAASA,EAAIlC,OAASJ,EAAMyD,mBACzDtB,IAAQoB,GAAWA,EAAS,GAAGN,UAAUZ,MAAK,SAACC,GAAD,OAASA,EAAIQ,KAAOxC,KAClEiC,KAAmBjC,GAAUE,GAAYE,GAC/C,IAAKyB,GAASI,EAAgB,CAC1B,IAAMC,EAAQC,MAAMC,KAAK1C,EAAMoC,MACzBO,EAAU,GACVC,EAAS,GACTC,EAASU,EAAS,GAAGN,UAC3BL,EAAOE,GAAKxC,EACZsC,EAAOlC,SAAWA,EAClBkC,EAAOxC,KAAOI,EACdoC,EAAOG,MAAQ,qBACfF,EAAOG,KAAKJ,GACZD,EAAQM,UAAYJ,EACpBF,EAAQe,KAAO1D,EAAMyD,gBACrBjB,EAAMmB,SAAQ,SAACrB,EAAKsB,GAAcjB,EAAQe,OAASpB,EAAIoB,OAAMlB,EAAMoB,GAAOjB,MAC1E3C,EAAMkD,iBAAiBV,GACvBjC,EAAS,IACTE,EAAW,IACXE,EAAY,IACZV,SACOkC,EACPgB,MAAM,+BACEZ,GACRY,MAAM,wCA8BE,mCCuGLU,EA7KG,SAAC7D,GACf,MAAuCG,mBAASH,EAAMoC,MAAtD,mBAAO0B,EAAP,KAAmBZ,EAAnB,KACA,EAAsC/C,mBAAS,IAA/C,mBAAO4D,EAAP,KAAoBC,EAApB,KACA,EAAsC7D,mBAAS,IAA/C,mBAAO8D,EAAP,KAAoBC,EAApB,KACA,EAA8C/D,mBAAS,IAAvD,mBAAOsD,EAAP,KAAwBU,EAAxB,KACA,EAAwBhE,oBAAS,GAAjC,mBAAOU,EAAP,KAAaX,EAAb,KACA,EAA8BC,oBAAS,GAAvC,mBAAOmD,EAAP,KAAgBD,EAAhB,KAgDAe,qBAAU,WACN,IAAM5B,EAAQC,MAAMC,KAAKoB,GACzBtB,EAAMmB,SAAQ,SAACrB,GACPA,EAAIlC,OAAS6D,GAAeF,GAC5BzB,EAAIW,UAAUD,KAAKe,MAG3Bb,EAAiBV,KAClB,CAACuB,EAAaE,IAEjB,IAAMI,EAAmB,SAACC,EAAWV,EAAOlC,GACxC,IAAMc,EAAQC,MAAMC,KAAKoB,GACzBtB,EAAM8B,GAAWrB,UAAUW,GAAOxD,KAAOsB,EACzCwB,EAAiBV,IAGf+B,EAAuB,SAACD,EAAWV,EAAOlC,GAC5C,IAAMc,EAAQC,MAAMC,KAAKoB,GACzBtB,EAAM8B,GAAWrB,UAAUW,GAAOlD,SAAWgB,EAC7CwB,EAAiBV,IAGfgC,EAAe,SAACF,EAAWV,EAAOlC,GACpC,IAAMc,EAAQC,MAAMC,KAAKoB,GACrBtB,EAAM8B,GAAWrB,UAAUwB,OAAS,EACpCtB,MAAM,sDAENX,EAAM8B,GAAWrB,UAAUyB,OAAOd,EAAO,GACzCV,EAAiBV,KAIzB,OACI,qBAAKnB,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,gCACI,cAAC,IAAD,CAAiBsD,UA3EjC,SAAyBC,GACrB,IAAMpC,EAAQC,MAAMC,KAAKoB,GACpBc,EAAOC,cACRD,EAAOC,YAAYZ,cAAgBW,EAAOE,OAAOb,YACjDzB,EAAMmB,SAAQ,SAACrB,GACX,GAAIA,GAAOA,EAAIlC,OAASwE,EAAOE,OAAOb,YAAa,CAC/C,GAAI3B,EAAIW,UAAUwB,OAAS,EACvB,OAEAnC,EAAIW,UAAUU,SAAQ,SAACoB,EAAKnB,GACpBmB,EAAIjC,KAAO8B,EAAOI,cAClBhB,EAAe,eAAKe,IACpBzC,EAAIW,UAAUyB,OAAOd,EAAO,GAC5BM,EAAeU,EAAOC,YAAYZ,qBAStDzB,EAAMmB,SAAQ,SAACrB,GACX,GAAIA,EACA,IAAK,IAAI2C,EAAI,EAAGA,EAAI3C,EAAIW,UAAUwB,OAAQQ,IAAK,CAE3C,GADY3C,EAAIW,UAAUgC,GAClBnC,KAAO8B,EAAOI,YAAa,CAC/B,MAAwB1C,EAAIW,UAAUyB,OAAOE,EAAOE,OAAOlB,MAAO,GAA3DsB,EAAP,oBACA5C,EAAIW,UAAUyB,OAAOE,EAAOC,YAAYjB,MAAO,EAAGsB,GAClD,WAMpBC,QAAQC,IAAIR,GACZ1B,EAAiBV,KAuCL,SACKsB,GAAcA,EAAWuB,KAAI,SAAC/C,EAAKgC,GAChC,OACI,sBAAKgB,MAAO,CAAEC,gBAAiB,QAA/B,UACKjD,GAAO,8BAAK,wCAAWA,EAAIlC,UAC3BkC,GAAO,cAAC,IAAD,CAAW2B,YAAa3B,EAAIlC,KAA5B,SACH,SAACoF,GAAD,OACG,qCACI,6CAAInE,UAAU,cAAiBmE,EAASC,gBAAxC,IAAwDC,IAAKF,EAASG,SAAtE,WACM3F,EAAM4F,aACJ,cAAC,IAAMC,SAAP,UACKvD,GAAOA,EAAIW,UAAUoC,KAAI,WAAgCzB,GAAW,IAAxCd,EAAuC,EAAvCA,GAAI1C,EAAmC,EAAnCA,KAAMM,EAA6B,EAA7BA,SAA6B,EAAnBqC,MAC7C,OACI,mCACI,cAAC,IAAD,CAAoBiC,YAAalC,EAAIc,MAAOA,EAA5C,SACK,SAAC4B,GAAD,OACG,qBAAKF,MAAO,CAAE,UAAW,CAAEQ,WAAY,UAAvC,SACI,yDAAIJ,IAAKF,EAASG,UAAcH,EAASO,gBAAoBP,EAASQ,iBAAtE,cACI,sBAAM3E,UAAU,mBAAmBiE,MAAO,CAAEW,KAAK,OAAQvF,SAAS,WAAYwF,cAAe,OAA7F,SACI,mBAAGC,MAAM,mBAEb,sBAAMb,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,qBAJJ,IAI2F,cAAC,IAAD,CAAUrE,MAAOxB,EAAMkF,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO2C,EAAiBC,EAAWV,EAAOlC,MAC5S,sBAAM4D,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,yBALJ,IAK+F,cAAC,IAAD,CAAUrE,MAAOlB,EAAU4E,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO6C,EAAqBD,EAAWV,EAAOlC,MACxT,uBAAM4D,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,qBAAiFrC,EAAQ,KACzF,sBAAM0B,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,yBAPJ,IAO+F,cAAC,IAAD,CAAUQ,KAAK,QAAQ7E,MAAOkB,EAAIwC,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO6C,EAAqBD,EAAWV,EAAOlC,MAC/T,uBAAM4D,MAAO,CAAEoB,YAAa,UAA5B,cAAyC,eAAC1E,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,SAACR,GAAD,OAAO8C,EAAaF,EAAWV,IAApE,qBAAuF,mBAAGuC,MAAM,2BAAhG,OAAzC,eAXArD,UAsBnC9C,EAAM4F,aACH,cAAC,IAAMC,SAAP,UACKvD,GAAOA,EAAIW,UAAUO,QAAO,SAAClB,GAAU,GAAKA,EAAIlC,KAAKuG,gBAAmB3G,EAAM4F,YAAYe,eAAkBrE,EAAIQ,GAAG6D,gBAAmB3G,EAAM4F,YAAYe,eAAkBrE,EAAI5B,SAASiG,gBAAmB3G,EAAM4F,YAAYe,cAAiB,OAAO,KAAUtB,KAAI,WAAgCzB,GAAW,IAAxCd,EAAuC,EAAvCA,GAAI1C,EAAmC,EAAnCA,KAAMM,EAA6B,EAA7BA,SAAUqC,EAAmB,EAAnBA,MACtR,OACI,mCACI,cAAC,IAAD,CAAoBiC,YAAalC,EAAIc,MAAOA,EAA5C,SACK,SAAC4B,GAAD,OACG,yDAAIE,IAAKF,EAASG,UAAcH,EAASO,gBAAoBP,EAASQ,iBAAtE,cACI,sBAAM3E,UAAU,mBAAmBiE,MAAO,CAAEY,cAAe,OAA3D,SACI,qBAAKU,IAAK7D,EAAOuC,MAAO,CAAEuB,OAAQ,OAAQnG,SAAU,WAAYuF,KAAM,QAAUa,IAAG,UAAK1G,EAAL,cAEvF,sBAAMkF,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,qBAJJ,IAI2F,cAAC,IAAD,CAAUrE,MAAOxB,EAAMkF,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO2C,EAAiBC,EAAWV,EAAOlC,MAC5S,sBAAM4D,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,yBALJ,IAK+F,cAAC,IAAD,CAAUrE,MAAOlB,EAAU4E,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO6C,EAAqBD,EAAWV,EAAOlC,MACxT,uBAAM4D,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,qBAAiFrC,EAAQ,KACzF,sBAAM0B,MAAO,CAAEc,SAAU,OAAQ1F,SAAU,WAAYuF,KAAM,SAA7D,yBAPJ,IAO+F,cAAC,IAAD,CAAUQ,KAAK,QAAQ7E,MAAOkB,EAAIwC,MAAO,CAAEc,SAAU,OAAQC,MAAO,MAAO3F,SAAU,WAAYuF,KAAM,QAASK,OAAQ,MAAOC,QAAS,MAAOC,UAAW,gBAAkB/E,SAAU,SAACC,GAAD,OAAO6C,EAAqBD,EAAWV,EAAOlC,MAC/T,uBAAM4D,MAAO,CAAEoB,YAAa,UAA5B,cAAyC,eAAC1E,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,SAACR,GAAD,OAAO8C,EAAaF,EAAWV,IAApE,qBAAuF,mBAAGuC,MAAM,2BAAhG,OAAzC,aAVIrD,UAmBnC0C,EAAS3D,gBAEd,sBAAKyD,MAAO,CAAEY,cAAe,OAA7B,cAAuC,eAAClE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,SAACR,GAAD,OA9IjGtB,EA8IsHkC,EAAIlC,KA7I7IiD,GAAW,QACXc,EAAmB/D,GAFD,IAACA,GA8I4D,iCAA4F,mBAAG+F,MAAM,2BAArG,wBAQnE,qBAAKb,MAAO,CAAEY,cAAe,MAAOa,WAAY,OAAhD,SACI,cAAC/E,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzJ3B,kBAAMhC,GAAQ,IAyJb,4BAIJ,cAAC,EAAD,CAAUkC,KAAM0B,EAAYZ,iBAAkBA,EAAkBhD,QAASA,EAASW,KAAMA,IACxF,cAAC,EAAD,CAAcuB,KAAM0B,EAAYZ,iBAAkBA,EAAkBG,WAAYA,EAAYC,QAASA,EAASG,gBAAiBA,Y,wBCxJpIuD,MApBf,SAAsBhH,GAalB,OACI,mCACI,uBAAOyG,KAAK,OAAOpF,UAAU,eAAeyB,GAAG,wBAAwBjB,YAAY,gDAAgDJ,SARtH,SAACC,GAClB1B,EAAMiH,eAAevF,EAAEC,OAAOC,QAOmIA,MAAS5B,EAAM4F,iBC2CzKsB,MArDf,WACE,IAAMC,EAAM,WACVC,aAAaC,QAAQ,YAAaC,KAAKC,UCPhCC,EAAaC,SDQpB,IAAM7C,EAASwC,aAAaM,QAAQ,aACpCC,EAAcL,KAAKM,MAAMhD,IACzBO,QAAQC,IAAIkC,KAAKM,MAAMhD,KAEzB,EAAoCzE,mBAAS,IAA7C,mBAAO0H,EAAP,KAAmBF,EAAnB,KACA,EAAsCxH,mBAAS,IAA/C,mBAAOyF,EAAP,KAAoBqB,EAApB,KAMA,OAJA7C,qBAAU,WACR+C,MACC,IAGD,sBAAK9F,UAAU,mBAAf,UACE,qBAAKiE,MAAO,CAAEwC,cAAe,SAAUC,MAAO,WAA9C,SAA2D,mEAC3D,qBAAKzC,MAAO,CAAEY,cAAe,OAAQa,WAAY,QAAjD,SACE,cAAC,EAAD,CAAcE,eAAgBA,EAAgBrB,YAAaA,MAE5DA,GAAe,qBAAKN,MAAO,CAAEY,cAAe,MAAOa,WAAY,MAAOgB,MAAO,MAAO3B,SAAU,QAA/E,SACd,0EAEF,cAAC4B,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,SACE,eAACD,EAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACGN,GACC,cAACG,EAAA,EAAUjH,OAAX,mDACF,cAACiH,EAAA,EAAU9G,KAAX,UACG2G,EAAWxC,KAAI,SAAC/C,GACf,OACE,cAAC0F,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,SACE,eAACD,EAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UAEE,cAACH,EAAA,EAAUjH,OAAX,UAAmBuB,EAAImE,OACvB,eAACuB,EAAA,EAAU9G,KAAX,WACE,wBAAOoE,MAAO,CAAEyC,MAAO,QAASK,aAAc,OAAQ1B,YAAa,SAAnE,cAA+E,qDAA/E,IAAiHpE,EAAI+F,YACrH,wBAAO/C,MAAO,CAAEyC,MAAO,SAAvB,cAAmC,sDAAnC,IAAsEzF,EAAIgG,UAC1E,cAAC,EAAD,CAAWlG,KAAME,EAAIiG,MAAO3C,YAAaA,sBASzD,qBAAKN,MAAO,CAAEY,cAAe,MAAOa,WAAY,MAAOgB,MAAO,SAAU3B,SAAU,QAAlF,SACE,mGE3COoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.328b70be.chunk.js","sourcesContent":["import Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\n\nfunction TeamForm(props) {\n\n    const handleClose = () => props.setShow(false);\n    const [name, setName] = useState(\"\");\n    const [empId, setEmpId] = useState(\"\");\n    const [empName, setEmpName] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n\n    const handleNameChange = (e) => {\n        setName(e.target.value)\n    }\n\n    const handleEmpIdChange = (e) => {\n        setEmpId(e.target.value)\n    }\n\n    const handleEmpNameChange = (e) => {\n        setEmpName(e.target.value)\n    }\n\n    const handleEmpPositionChange = (e) => {\n        setPosition(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        const found = props.data.some((val) => val.name === name) // Bonus feature 1 : Two teams cannot have the same name.\n        const formValidation = (!name || !empId || !empName || !position) ? false : true\n        if (!found && formValidation) {\n            const items = Array.from(props.data);\n            const teamObj = {}\n            const empObj = {}\n            const empArr = []\n            teamObj.name = name\n            empObj.id = empId\n            empObj.position = position\n            empObj.name = empName\n            empObj.thumb = \"/images/avatar.jpg\"\n            empArr.push(empObj)\n            teamObj.employees = empArr\n            items.push(teamObj)\n            props.updateCharacters(items)\n            setName(\"\")\n            setEmpId(\"\")\n            setEmpName(\"\")\n            setPosition(\"\")\n            handleClose()\n        } else if (found) {\n            alert(\"Team Name Must Be Unique!\")\n        } else if (!formValidation) {\n            alert(\"Please Enter All the Required Fields\")\n        }\n    }\n\n    return (\n        <>\n\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add New Team</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control onChange={handleNameChange} value={name} placeholder=\"Enter Name\" />\n                            <Form.Text className=\"text-muted\">\n                                Please make sure the team Name is unique\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpId\">\n                            <Form.Label>Employee Id</Form.Label>\n                            <Form.Control onChange={handleEmpIdChange} value={empId} placeholder=\"Enter Employee Id\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpName\">\n                            <Form.Label>Employee Name</Form.Label>\n                            <Form.Control onChange={handleEmpNameChange} value={empName} placeholder=\"Enter Employee Name\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpPosition\">\n                            <Form.Label>Postion</Form.Label>\n                            <Form.Control onChange={handleEmpPositionChange} placeholder=\"Enter Position\" value={position} />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default TeamForm;","import Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\n\nfunction EmployeeForm(props) {\n\n    const handleClose = () => props.setEmpShow(false);\n    const [empId, setEmpId] = useState(\"\");\n    const [empName, setEmpName] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n\n    const handleEmpIdChange = (e) => {\n        setEmpId(e.target.value)\n    }\n\n    const handleEmpNameChange = (e) => {\n        setEmpName(e.target.value)\n    }\n\n    const handleEmpPositionChange = (e) => {\n        setPosition(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        const teamData = props.data.filter((val) => val.name === props.draggedTeamName)\n        const found = teamData ? teamData[0].employees.some((val) => val.id === empId) : false\n        const formValidation = (!empId || !empName || !position) ? false : true\n        if (!found && formValidation) {\n            const items = Array.from(props.data);\n            const teamObj = {}\n            const empObj = {}\n            const empArr = teamData[0].employees\n            empObj.id = empId\n            empObj.position = position\n            empObj.name = empName\n            empObj.thumb = \"/images/avatar.jpg\"\n            empArr.push(empObj)\n            teamObj.employees = empArr\n            teamObj.team = props.draggedTeamName\n            items.forEach((val, index) => {if(teamObj.team === val.team){items[index]=teamObj}})\n            props.updateCharacters(items)\n            setEmpId(\"\")\n            setEmpName(\"\")\n            setPosition(\"\")\n            handleClose()\n        } else if (found) {\n            alert(\"Employee ID Must Be Unique!\")\n        } else if (!formValidation) {\n            alert(\"Please Fill All the Required Fields\")\n        }\n    }\n\n    return (\n        <>\n            <Modal show={props.empShow} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add New Team Member</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpId\">\n                            <Form.Label>Employee Id</Form.Label>\n                            <Form.Control onChange={handleEmpIdChange} value={empId} placeholder=\"Enter Employee Id\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpName\">\n                            <Form.Label>Employee Name</Form.Label>\n                            <Form.Control onChange={handleEmpNameChange} value={empName} placeholder=\"Enter Employee Name\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmpPosition\">\n                            <Form.Label>Postion</Form.Label>\n                            <Form.Control onChange={handleEmpPositionChange} placeholder=\"Enter Position\" value={position} />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default EmployeeForm;","import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport React, { useState, useEffect } from 'react';\nimport { EditText } from 'react-edit-text';\nimport Button from 'react-bootstrap/Button';\nimport 'react-edit-text/dist/index.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport TeamForm from './TeamForm';\nimport EmployeeForm from './EmployeeForm';\n\nconst Hierarchy = (props) => {\n    const [characters, updateCharacters] = useState(props.data);\n    const [draggedItem, setDraggedItem] = useState({});\n    const [droppableId, setDroppableId] = useState(\"\");\n    const [draggedTeamName, setDraggedTeamName] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [empShow, setEmpShow] = useState(false);\n\n    const handleShow = () => setShow(true);\n\n    const handleEmpShow = (name, e) => {\n        setEmpShow(true)\n        setDraggedTeamName(name)\n    };\n\n    function handleOnDragEnd(result) {\n        const items = Array.from(characters);\n        if (!result.destination) return;\n        if (result.destination.droppableId !== result.source.droppableId) {\n            items.forEach((val) => {\n                if (val && val.name === result.source.droppableId) {\n                    if (val.employees.length < 2) {\n                        return\n                    } else {\n                        val.employees.forEach((emp, index) => {\n                            if (emp.id === result.draggableId) {\n                                setDraggedItem({ ...emp })\n                                val.employees.splice(index, 1)\n                                setDroppableId(result.destination.droppableId)\n                            }\n                        })\n                    }\n                }\n            })\n\n            //Bonus Feature 3: Promoting/Demoting employee level in same team.\n        } else {\n            items.forEach((val) => {\n                if (val) {\n                    for (let i = 0; i < val.employees.length; i++) {\n                        const emp = val.employees[i]\n                        if (emp.id === result.draggableId) {\n                            const [reorderedItem] = val.employees.splice(result.source.index, 1);\n                            val.employees.splice(result.destination.index, 0, reorderedItem);\n                            break;\n                        }\n                    }\n                }\n            })\n        }\n        console.log(result)\n        updateCharacters(items);\n    }\n\n    useEffect(() => {\n        const items = Array.from(characters);\n        items.forEach((val) => {\n            if (val.name === droppableId && draggedItem) {\n                val.employees.push(draggedItem)\n            }\n        })\n        updateCharacters(items);\n    }, [draggedItem, droppableId]);\n\n    const handleNameChange = (teamIndex, index, e) => {\n        const items = Array.from(characters);\n        items[teamIndex].employees[index].name = e\n        updateCharacters(items);\n    }\n\n    const handlePositionChange = (teamIndex, index, e) => {\n        const items = Array.from(characters);\n        items[teamIndex].employees[index].position = e\n        updateCharacters(items);\n    }\n\n    const handleDelete = (teamIndex, index, e) => {\n        const items = Array.from(characters);\n        if (items[teamIndex].employees.length < 2) {\n            alert(\"There Must Be At Least One Employee in Each Team!\")\n        } else {\n            items[teamIndex].employees.splice(index, 1)\n            updateCharacters(items);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    <DragDropContext onDragEnd={handleOnDragEnd}>\n                        {characters && characters.map((val, teamIndex) => {\n                            return (\n                                <div style={{ backgroundColor: 'grey' }}>\n                                    {val && <div><h5>Team: {val.name}</h5></div>}\n                                    {val && <Droppable droppableId={val.name}>\n                                        {(provided) => (\n                                            <>\n                                                <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n                                                    {!props.searchValue &&\n                                                        <React.Fragment>\n                                                            {val && val.employees.map(({ id, name, position, thumb }, index) => {\n                                                                return (\n                                                                    <>\n                                                                        <Draggable key={id} draggableId={id} index={index}>\n                                                                            {(provided) => (\n                                                                                <div style={{ \".:hover\": { background: \"white\" } }}>\n                                                                                    <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                                                        <span className=\"characters-thumb\" style={{ left:'72px', position:'absolute', paddingBottom: '2px' }}>\n                                                                                            <i class=\"bi bi-person\"></i>\n                                                                                        </span>\n                                                                                        <span style={{ fontSize: '20px', position: 'absolute', left: '115px' }}> Name: </span> <EditText value={name} style={{ fontSize: '20px', width: '10%', position: 'absolute', left: '190px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handleNameChange(teamIndex, index, e)} />\n                                                                                        <span style={{ fontSize: '20px', position: 'absolute', left: '370px' }}> Position: </span> <EditText value={position} style={{ fontSize: '20px', width: '13%', position: 'absolute', left: '460px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handlePositionChange(teamIndex, index, e)} />\n                                                                                        <span style={{ fontSize: '20px', position: 'absolute', left: '675px' }}> Level: {index + 1}</span>\n                                                                                        <span style={{ fontSize: '20px', position: 'absolute', left: '805px' }}> Email Id: </span> <EditText type='email' value={id} style={{ fontSize: '20px', width: '20%', position: 'absolute', left: '900px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handlePositionChange(teamIndex, index, e)} />\n                                                                                        <span style={{ paddingLeft: '1000px' }}> <Button variant=\"secondary\" onClick={(e) => handleDelete(teamIndex, index, e)}> Remove <i class=\"bi bi-x-square-fill md\"></i> </Button> </span>\n                                                                                    </li>\n                                                                                </div>\n                                                                            )}\n                                                                        </Draggable>\n                                                                    </>\n                                                                );\n                                                            })}\n                                                        </React.Fragment>\n                                                    }\n\n                                                    {props.searchValue &&\n                                                        <React.Fragment>\n                                                            {val && val.employees.filter((val) => { if ((val.name.toLowerCase()) === props.searchValue.toLowerCase() || (val.id.toLowerCase()) === props.searchValue.toLowerCase() || (val.position.toLowerCase()) === props.searchValue.toLowerCase()) { return true } }).map(({ id, name, position, thumb }, index) => {\n                                                                return (\n                                                                    <>\n                                                                        <Draggable key={id} draggableId={id} index={index}>\n                                                                            {(provided) => (\n                                                                                <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                                                    <span className=\"characters-thumb\" style={{ paddingBottom: '2px' }}>\n                                                                                        <img src={thumb} style={{ height: '40px', position: 'absolute', left: '72px' }} alt={`${name} Thumb`} />\n                                                                                    </span>\n                                                                                    <span style={{ fontSize: '20px', position: 'absolute', left: '115px' }}> Name: </span> <EditText value={name} style={{ fontSize: '20px', width: '10%', position: 'absolute', left: '190px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handleNameChange(teamIndex, index, e)} />\n                                                                                    <span style={{ fontSize: '20px', position: 'absolute', left: '370px' }}> Position: </span> <EditText value={position} style={{ fontSize: '20px', width: '13%', position: 'absolute', left: '460px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handlePositionChange(teamIndex, index, e)} />\n                                                                                    <span style={{ fontSize: '20px', position: 'absolute', left: '675px' }}> Level: {index + 1}</span>\n                                                                                    <span style={{ fontSize: '20px', position: 'absolute', left: '805px' }}> Email Id: </span> <EditText type='email' value={id} style={{ fontSize: '20px', width: '20%', position: 'absolute', left: '900px', margin: '0px', padding: '0px', textAlign: '-webkit-left' }} onChange={(e) => handlePositionChange(teamIndex, index, e)} />\n                                                                                    <span style={{ paddingLeft: '1000px' }}> <Button variant=\"secondary\" onClick={(e) => handleDelete(teamIndex, index, e)}> Remove <i class=\"bi bi-x-square-fill md\"></i> </Button> </span>\n                                                                                </li>\n                                                                            )}\n                                                                        </Draggable>\n                                                                    </>\n                                                                );\n                                                            })}\n                                                        </React.Fragment>\n                                                    }\n                                                    {provided.placeholder}\n                                                </ul>\n                                                <div style={{ paddingBottom: '7px' }}> <Button variant=\"secondary\" onClick={(e) => handleEmpShow(val.name, e)}>Add New Team Member <i class=\"bi bi-plus-circle-fill\"></i> </Button></div>\n                                            </>\n                                        )}\n                                    </Droppable>}\n                                </div>\n                            );\n                        })}\n                    </DragDropContext>\n                    <div style={{ paddingBottom: '7px', paddingTop: '3px' }}>\n                        <Button variant=\"primary\" onClick={handleShow}>\n                            Add New Team\n                        </Button>\n                    </div>\n                    <TeamForm data={characters} updateCharacters={updateCharacters} setShow={setShow} show={show} />\n                    <EmployeeForm data={characters} updateCharacters={updateCharacters} setEmpShow={setEmpShow} empShow={empShow} draggedTeamName={draggedTeamName} />\n                </div>\n            </header>\n        </div>\n    );\n};\n\nexport default Hierarchy;","\nimport React from 'react';\n\nfunction FilterSearch(props) {\n\n    // const [empId, setEmpId] = useState(\"\");\n    // const [empName, setEmpName] = useState(\"\");\n    // const [position, setPosition] = useState(\"\");\n\n\n    const handleChange = (e) => {\n        props.setSearchValue(e.target.value)\n    }\n\n   \n\n    return (\n        <>\n            <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Search By Employee Name, Position or Email ID\" onChange = {handleChange} value = {props.searchValue}/>\n        </>\n    );\n}\n\nexport default FilterSearch;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Hierarchy from './Hierarchy';\nimport { LOCALES } from './locales'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Accordion from 'react-bootstrap/Accordion'\nimport FilterSearch from './FilterSearch';\n\nfunction App() {\n  const abc = () => {\n    localStorage.setItem('Employees', JSON.stringify(LOCALES()))\n    const result = localStorage.getItem('Employees')\n    setDataSource(JSON.parse(result))\n    console.log(JSON.parse(result))\n  }\n  const [dataSource, setDataSource] = useState([])\n  const [searchValue, setSearchValue] = useState('')\n\n  useEffect(() => {\n    abc()\n  }, []);\n\n  return (\n    <div className=\"Accordion-header\">\n      <div style={{ textAlignLast: 'center', color: '#98f2fb' }}><h3> Commutatus Employee Hierarchy </h3></div>\n      <div style={{ paddingBottom: '15px', paddingTop: '10px' }}>\n        <FilterSearch setSearchValue={setSearchValue} searchValue={searchValue} />\n      </div>\n      {searchValue && <div style={{ paddingBottom: '5px', paddingTop: '5px', color: 'red', fontSize: '25px' }}>\n        <label>You are now seeing filtered values:</label>\n      </div>}\n      <Accordion defaultActiveKey=\"0\">\n        <Accordion.Item eventKey=\"0\">\n          {dataSource &&\n            <Accordion.Header>Welcome CEO! Expand To See Your Team</Accordion.Header>}\n          <Accordion.Body>\n            {dataSource.map((val) => {\n              return (\n                <Accordion defaultActiveKey=\"0\">\n                  <Accordion.Item eventKey=\"1\">\n                    {/* Bonus feature 2 : We should be able to select a Team/Head and should be able to see all the employees who are under them. */}\n                    <Accordion.Header>{val.type}</Accordion.Header>\n                    <Accordion.Body>\n                      <label style={{ color: 'brown', paddingRight: '35px', paddingLeft: '320px' }}> <strong>Team Head Name:</strong> {val.headName}</label>\n                      <label style={{ color: 'brown' }}> <strong>Team Head Email:</strong> {val.headId}</label>\n                      <Hierarchy data={val.teams} searchValue={searchValue} />\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              );\n            })}\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      <div style={{ paddingBottom: '5px', paddingTop: '5px', color: 'orange', fontSize: '15px' }}>\n        <label>*Use drag and drop to change team/level of each employee</label>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import LOCALEOBJECT from \"./locales.json\"\n\nexport const LOCALES = () => {\n    return LOCALEOBJECT.People\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}